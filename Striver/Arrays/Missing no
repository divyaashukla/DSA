https://leetcode.com/problems/missing-number/description/


Brute force:
O(N^2)

Better Approach:
Hashing->O(N) [o{n}+o{n}]

OPTIMAL:O(N)
two soln:
1.sum the nos. and then subtract the sum of array elements
2. Xor


1.) class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int sum=0;
        int n=nums.size();
        int s=(n*(n+1))/2;
        for(int i=0;i<n;i++)
        {
            sum=sum+nums[i];
        }
        return (s-sum);
        
    }
};


2.)class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int n=nums.size();
        int xor1=0,xor2=0;
        for(int i=0;i<n;i++)
        {
            xor2=xor2^nums[i];
            xor1=xor1^(i+1);
        }
        return xor1^xor2;
    }
};